#!/bin/bash
commid_id=$1 # $1 = commit_id
patch_name=$2 # $2 = dd_mm_yyyy [direcory patch name]
rollback_steps=$3 # $3 = count of migrations to rollback

about_to_finish () {
	sleep 0.5
	echo -e "\n  Done\n"
}
header() {
	echo -e "\n"
	echo -e "  ================================================================"
	echo -e "    $1"
	echo -e "  ============================="
}

# ===============================================================
header "Removing previous patches"
rm -rf $patch_name*
about_to_finish

# ===============================================================
header "Fetching changed files"
git diff-tree -r --no-commit-id --name-only $commid_id master | xargs tar -cf $patch_name.tar \
	&& mkdir $patch_name \
	&& tar -xf $patch_name.tar --directory ./$patch_name
about_to_finish

# ===============================================================
header "Generating public assets"
# npm run prod
about_to_finish

# ===============================================================
# COPY js files (mirorring resources js files) 
# generated by npm command into public
header "Copying public assets"
search_dir=./$patch_name/resources/js/pages
# i=1
js_files=()
for entry in "$search_dir"/*
do
  # echo -e "$i \t $name" OR # echo "$i - $entry"
  name=`basename "$entry"`
  js_files+=($name)
#   ((i++))
done

echo -e "\n  Src: ./public/js/pages ==> Dest: ./$patch_name/public/js/pages\n"

mkdir ./$patch_name/public/
mkdir ./$patch_name/public/js/
mkdir ./$patch_name/public/js/pages/
for file in "${js_files[@]}"
do
  cp ./public/js/pages/$file ./$patch_name/public/js/pages/$file
done
about_to_finish

# ===============================================================
header "Generating Newest migrations as sql script"
if [ $rollback_steps -le 0 ];
then
	echo "  No migration will be rolledback"
else
	php artisan migrate:rollback --step=$rollback_steps
	mkdir ./$patch_name/database/
	sqlfile="./$patch_name/database/migrate.sql"
	php artisan migrate --pretend --no-ansi > $sqlfile
	pattern="AddColumnMotifAnnulation"
	bakfile="./$patch_name/database/_migrate.sql"
	sed 's/[^ ]*:[^ ]* //' $sqlfile > $bakfile
	mv $bakfile $sqlfile
	echo -e "\n  Migrations rolledback : $rollback_steps"
	echo -e "\n  Restoring the original state of the database\n"
	php artisan migrate
fi
about_to_finish

# ===============================================================
header "Zipping the '$patch_name' directory & Removing any useless files/directories"
tar -cf $patch_name.zip $patch_name/* \
	&& rm -rf $patch_name $patch_name.tar
about_to_finish

# clear

echo -e "\n\nGenerated path : $patch_name.zip\n\n"